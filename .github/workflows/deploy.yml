name: Build and Deploy Hugo Site
on:
  # Run daily at midnight UTC
  schedule:
    - cron: '0 0 * * *'
  
  # Run when a webhook is triggered
  repository_dispatch:
    types: [deploy]
    
  # Optional: Run when changes are pushed to main branch
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (if used)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install TailwindCSS in project directory
        run: |
          # Install TailwindCSS in the project directory
          npm init -y
          npm install tailwindcss postcss autoprefixer
          npx tailwindcss init
          
          # Create a simple tailwind.config.js if it doesn't exist
          if [ ! -f "tailwind.config.js" ]; then
            echo "module.exports = {
              content: ['./layouts/**/*.html', './content/**/*.md'],
              theme: { extend: {} },
              plugins: [],
            }" > tailwind.config.js
          fi
          
          # Create a postcss.config.js file if it doesn't exist
          if [ ! -f "postcss.config.js" ]; then
            echo "module.exports = {
              plugins: {
                tailwindcss: {},
                autoprefixer: {},
              }
            }" > postcss.config.js
          fi
          
          # Print the directory structure for debugging
          echo "Current directory structure:"
          ls -la
      
      - name: Build site
        run: hugo --minify
      
      # Alternative SSH setup with appleboy's action
      - name: Deploy to VPS via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: manifoldcollective.com
          username: deploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: public/
          target: /var/www/manifoldcollective/
          strip_components: 1
          
      - name: Set permissions
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: manifoldcollective.com
          username: deploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: chmod -R 755 /var/www/manifoldcollective/